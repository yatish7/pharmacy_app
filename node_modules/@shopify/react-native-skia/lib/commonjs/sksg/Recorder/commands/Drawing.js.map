{"version":3,"names":["_nodes","require","_processors","_types","_utils","drawLine","ctx","props","p1","p2","canvas","x","y","paint","exports","drawOval","rect","processRect","Skia","drawBox","children","box","defaultBox","opacity","getAlphaf","isRRect","RRectXY","shadows","map","node","type","NodeType","BoxShadow","materialize","filter","n","shadow","inner","color","blur","spread","dx","dy","lPaint","Paint","setColor","processColor","setAlphaf","setMaskFilter","MaskFilter","MakeBlur","BlurStyle","Normal","drawRRect","inflate","delta","Point","Math","abs","save","clipRRect","ClipOp","Intersect","deflate","outer","drawDRRect","restore","drawImage","image","sampling","_props$fit","fit","src","dst","fitRects","width","height","isCubicSampling","drawImageRectCubic","B","C","_sampling$filter","_sampling$mipmap","drawImageRectOptions","FilterMode","Linear","mipmap","MipmapMode","None","drawPoints","points","mode","PointMode","enumKey","drawVertices","textures","colors","indices","blendMode","vertexMode","VertexMode","Triangles","vertices","MakeVertices","c","undefined","defaultBlendMode","BlendMode","DstOver","SrcOver","blend","drawDiffRect","drawTextPath","path","processPath","font","initialOffset","text","ids","getGlyphIDs","widths","getGlyphWidths","rsx","meas","ContourMeasureIter","cont","next","dist","i","length","substring","p","t","getPosTan","adjustedX","adjustedY","push","RSXform","derived","TextBlob","MakeFromRSXform","drawTextBlob","drawText","drawPatch","texture","patch","pos","c2","c1","drawPath","start","trimStart","end","trimEnd","fillType","stroke","pathProps","saturate","hasStartOffset","hasEndOffset","hasStrokeOptions","hasFillType","willMutatePath","pristinePath","copy","setFillType","FillType","trim","drawRect","processRRect","blob","drawGlyphs","glyphs","reduce","acc","glyph","id","positions","drawImageSVG","svg","translate","drawSvg","drawParagraph","paragraph","layout","drawPicture","picture","drawAtlas","sprites","transforms","drawCircle","processCircle","r","drawFill","_props","drawPaint"],"sources":["Drawing.ts"],"sourcesContent":["import {\n  deflate,\n  enumKey,\n  fitRects,\n  inflate,\n  NodeType,\n  processCircle,\n  processColor,\n  processPath,\n  processRect,\n  processRRect,\n} from \"../../../dom/nodes\";\nimport type {\n  AtlasProps,\n  BoxProps,\n  BoxShadowProps,\n  CircleProps,\n  DiffRectProps,\n  DrawingNodeProps,\n  GlyphsProps,\n  ImageProps,\n  ImageSVGProps,\n  LineProps,\n  OvalProps,\n  ParagraphProps,\n  PatchProps,\n  PathProps,\n  PictureProps,\n  PointsProps,\n  RectProps,\n  RoundedRectProps,\n  TextBlobProps,\n  TextPathProps,\n  TextProps,\n  VerticesProps,\n} from \"../../../dom/types\";\nimport { saturate } from \"../../../renderer/processors\";\nimport type { SkPoint, SkRSXform } from \"../../../skia/types\";\nimport {\n  BlendMode,\n  BlurStyle,\n  ClipOp,\n  FillType,\n  FilterMode,\n  isCubicSampling,\n  isRRect,\n  MipmapMode,\n  PointMode,\n  VertexMode,\n} from \"../../../skia/types\";\nimport type { Node } from \"../../Node\";\nimport { materialize } from \"../../utils\";\nimport type { DrawingContext } from \"../DrawingContext\";\n\nexport const drawLine = (ctx: DrawingContext, props: LineProps) => {\n  \"worklet\";\n  const { p1, p2 } = props;\n  ctx.canvas.drawLine(p1.x, p1.y, p2.x, p2.y, ctx.paint);\n};\n\nexport const drawOval = (ctx: DrawingContext, props: OvalProps) => {\n  \"worklet\";\n  const rect = processRect(ctx.Skia, props);\n  ctx.canvas.drawOval(rect, ctx.paint);\n};\n\nexport const drawBox = (\n  ctx: DrawingContext,\n  props: BoxProps,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  children: Node<any>[]\n) => {\n  \"worklet\";\n  const { paint, Skia, canvas } = ctx;\n  const { box: defaultBox } = props;\n  const opacity = paint.getAlphaf();\n  const box = isRRect(defaultBox) ? defaultBox : Skia.RRectXY(defaultBox, 0, 0);\n  const shadows = children\n    .map((node) => {\n      if (node.type === NodeType.BoxShadow) {\n        return materialize(node.props);\n      }\n      return null;\n    })\n    .filter((n): n is BoxShadowProps => n !== null);\n  shadows\n    .filter((shadow) => !shadow.inner)\n    .map((shadow) => {\n      const { color = \"black\", blur, spread = 0, dx = 0, dy = 0 } = shadow;\n      const lPaint = Skia.Paint();\n      lPaint.setColor(processColor(Skia, color));\n      lPaint.setAlphaf(paint.getAlphaf() * opacity);\n      lPaint.setMaskFilter(\n        Skia.MaskFilter.MakeBlur(BlurStyle.Normal, blur, true)\n      );\n      canvas.drawRRect(inflate(Skia, box, spread, spread, dx, dy), lPaint);\n    });\n\n  canvas.drawRRect(box, paint);\n\n  shadows\n    .filter((shadow) => shadow.inner)\n    .map((shadow) => {\n      const { color = \"black\", blur, spread = 0, dx = 0, dy = 0 } = shadow;\n      const delta = Skia.Point(10 + Math.abs(dx), 10 + Math.abs(dy));\n      canvas.save();\n      canvas.clipRRect(box, ClipOp.Intersect, false);\n      const lPaint = Skia.Paint();\n      lPaint.setColor(processColor(Skia, color));\n      lPaint.setAlphaf(paint.getAlphaf() * opacity);\n\n      lPaint.setMaskFilter(\n        Skia.MaskFilter.MakeBlur(BlurStyle.Normal, blur, true)\n      );\n      const inner = deflate(Skia, box, spread, spread, dx, dy);\n      const outer = inflate(Skia, box, delta.x, delta.y);\n      canvas.drawDRRect(outer, inner, lPaint);\n      canvas.restore();\n    });\n};\n\nexport const drawImage = (ctx: DrawingContext, props: ImageProps) => {\n  \"worklet\";\n  const { image, sampling } = props;\n  if (image) {\n    const fit = props.fit ?? \"contain\";\n    const rect = processRect(ctx.Skia, props);\n    const { src, dst } = fitRects(\n      fit,\n      {\n        x: 0,\n        y: 0,\n        width: image.width(),\n        height: image.height(),\n      },\n      rect\n    );\n    if (sampling && isCubicSampling(sampling)) {\n      ctx.canvas.drawImageRectCubic(\n        image,\n        src,\n        dst,\n        sampling.B,\n        sampling.C,\n        ctx.paint\n      );\n    } else {\n      ctx.canvas.drawImageRectOptions(\n        image,\n        src,\n        dst,\n        sampling?.filter ?? FilterMode.Linear,\n        sampling?.mipmap ?? MipmapMode.None,\n        ctx.paint\n      );\n    }\n  }\n};\n\nexport const drawPoints = (ctx: DrawingContext, props: PointsProps) => {\n  \"worklet\";\n  const { points, mode } = props;\n  ctx.canvas.drawPoints(PointMode[enumKey(mode)], points, ctx.paint);\n};\n\nexport const drawVertices = (ctx: DrawingContext, props: VerticesProps) => {\n  \"worklet\";\n  const { mode, textures, colors, indices, blendMode } = props;\n  const vertexMode = mode ? VertexMode[enumKey(mode)] : VertexMode.Triangles;\n  const vertices = ctx.Skia.MakeVertices(\n    vertexMode,\n    props.vertices,\n    textures,\n    colors ? colors.map((c) => processColor(ctx.Skia, c)) : undefined,\n    indices\n  );\n  const defaultBlendMode = colors ? BlendMode.DstOver : BlendMode.SrcOver;\n  const blend = blendMode ? BlendMode[enumKey(blendMode)] : defaultBlendMode;\n\n  ctx.canvas.drawVertices(vertices, blend, ctx.paint);\n};\n\nexport const drawDiffRect = (ctx: DrawingContext, props: DiffRectProps) => {\n  \"worklet\";\n  const { outer, inner } = props;\n  ctx.canvas.drawDRRect(outer, inner, ctx.paint);\n};\n\nexport const drawTextPath = (ctx: DrawingContext, props: TextPathProps) => {\n  \"worklet\";\n  const path = processPath(ctx.Skia, props.path);\n  const { font, initialOffset } = props;\n  if (font) {\n    let { text } = props;\n    const ids = font.getGlyphIDs(text);\n    const widths = font.getGlyphWidths(ids);\n    const rsx: SkRSXform[] = [];\n    const meas = ctx.Skia.ContourMeasureIter(path, false, 1);\n    let cont = meas.next();\n    let dist = initialOffset;\n    for (let i = 0; i < text.length && cont; i++) {\n      const width = widths[i];\n      dist += width / 2;\n      if (dist > cont.length()) {\n        // jump to next contour\n        cont = meas.next();\n        if (!cont) {\n          // We have come to the end of the path - terminate the string\n          // right here.\n          text = text.substring(0, i);\n          break;\n        }\n        dist = width / 2;\n      }\n      // Gives us the (x, y) coordinates as well as the cos/sin of the tangent\n      // line at that position.\n      const [p, t] = cont.getPosTan(dist);\n      const adjustedX = p.x - (width / 2) * t.x;\n      const adjustedY = p.y - (width / 2) * t.y;\n      rsx.push(ctx.Skia.RSXform(t.x, t.y, adjustedX, adjustedY));\n      dist += width / 2;\n    }\n    const derived = ctx.Skia.TextBlob.MakeFromRSXform(text, rsx, font);\n    ctx.canvas.drawTextBlob(derived, 0, 0, ctx.paint);\n  }\n};\n\nexport const drawText = (ctx: DrawingContext, props: TextProps) => {\n  \"worklet\";\n  const { text, x, y, font } = props;\n  if (font != null) {\n    ctx.canvas.drawText(text, x, y, ctx.paint, font);\n  }\n};\n\nexport const drawPatch = (ctx: DrawingContext, props: PatchProps) => {\n  \"worklet\";\n  const { texture, blendMode, patch } = props;\n  const defaultBlendMode = props.colors ? BlendMode.DstOver : BlendMode.SrcOver;\n  const mode = blendMode ? BlendMode[enumKey(blendMode)] : defaultBlendMode;\n  // Patch requires a path with the following constraints:\n  // M tl\n  // C c1 c2 br\n  // C c1 c2 bl\n  // C c1 c2 tl (the redundant point in the last command is removed)\n\n  const points = [\n    patch[0].pos,\n    patch[0].c2,\n    patch[1].c1,\n    patch[1].pos,\n    patch[1].c2,\n    patch[2].c1,\n    patch[2].pos,\n    patch[2].c2,\n    patch[3].c1,\n    patch[3].pos,\n    patch[3].c2,\n    patch[0].c1,\n  ];\n  const colors = props.colors\n    ? props.colors.map((c) => processColor(ctx.Skia, c))\n    : undefined;\n  ctx.canvas.drawPatch(points, colors, texture, mode, ctx.paint);\n};\n\nexport const drawPath = (ctx: DrawingContext, props: PathProps) => {\n  \"worklet\";\n  const {\n    start: trimStart,\n    end: trimEnd,\n    fillType,\n    stroke,\n    ...pathProps\n  } = props;\n  const start = saturate(trimStart);\n  const end = saturate(trimEnd);\n  const hasStartOffset = start !== 0;\n  const hasEndOffset = end !== 1;\n  const hasStrokeOptions = stroke !== undefined;\n  const hasFillType = !!fillType;\n  const willMutatePath =\n    hasStartOffset || hasEndOffset || hasStrokeOptions || hasFillType;\n  const pristinePath = processPath(ctx.Skia, pathProps.path);\n  const path = willMutatePath ? pristinePath.copy() : pristinePath;\n  if (hasFillType) {\n    path.setFillType(FillType[enumKey(fillType)]);\n  }\n  if (hasStrokeOptions) {\n    path.stroke(stroke);\n  }\n  if (hasStartOffset || hasEndOffset) {\n    path.trim(start, end, false);\n  }\n  ctx.canvas.drawPath(path, ctx.paint);\n};\n\nexport const drawRect = (ctx: DrawingContext, props: RectProps) => {\n  \"worklet\";\n  const derived = processRect(ctx.Skia, props);\n  ctx.canvas.drawRect(derived, ctx.paint);\n};\n\nexport const drawRRect = (ctx: DrawingContext, props: RoundedRectProps) => {\n  \"worklet\";\n  const derived = processRRect(ctx.Skia, props);\n  ctx.canvas.drawRRect(derived, ctx.paint);\n};\n\nexport const drawTextBlob = (ctx: DrawingContext, props: TextBlobProps) => {\n  \"worklet\";\n  const { blob, x, y } = props;\n  ctx.canvas.drawTextBlob(blob, x, y, ctx.paint);\n};\n\ninterface ProcessedGlyphs {\n  glyphs: number[];\n  positions: SkPoint[];\n}\n\nexport const drawGlyphs = (ctx: DrawingContext, props: GlyphsProps) => {\n  \"worklet\";\n  const derived = props.glyphs.reduce<ProcessedGlyphs>(\n    (acc, glyph) => {\n      const { id, pos } = glyph;\n      acc.glyphs.push(id);\n      acc.positions.push(pos);\n      return acc;\n    },\n    { glyphs: [], positions: [] }\n  );\n  const { glyphs, positions } = derived;\n  const { x, y, font } = props;\n  if (font) {\n    ctx.canvas.drawGlyphs(glyphs, positions, x, y, font, ctx.paint);\n  }\n};\n\nexport const drawImageSVG = (ctx: DrawingContext, props: ImageSVGProps) => {\n  \"worklet\";\n  const { canvas } = ctx;\n  const { svg } = props;\n  const { x, y, width, height } = props.rect\n    ? props.rect\n    : { x: props.x, y: props.y, width: props.width, height: props.height };\n  if (svg === null) {\n    return;\n  }\n  canvas.save();\n  if (x && y) {\n    canvas.translate(x, y);\n  }\n  canvas.drawSvg(svg, width, height);\n  canvas.restore();\n};\n\nexport const drawParagraph = (ctx: DrawingContext, props: ParagraphProps) => {\n  \"worklet\";\n  const { paragraph, x, y, width } = props;\n  if (paragraph) {\n    paragraph.layout(width);\n    paragraph.paint(ctx.canvas, x, y);\n  }\n};\n\nexport const drawPicture = (ctx: DrawingContext, props: PictureProps) => {\n  \"worklet\";\n  const { picture } = props;\n  ctx.canvas.drawPicture(picture);\n};\n\nexport const drawAtlas = (ctx: DrawingContext, props: AtlasProps) => {\n  \"worklet\";\n  const { image, sprites, transforms, colors, blendMode, sampling } = props;\n  const blend = blendMode ? BlendMode[enumKey(blendMode)] : undefined;\n  if (image) {\n    ctx.canvas.drawAtlas(\n      image,\n      sprites,\n      transforms,\n      ctx.paint,\n      blend,\n      colors,\n      sampling\n    );\n  }\n};\n\nexport const drawCircle = (ctx: DrawingContext, props: CircleProps) => {\n  \"worklet\";\n  const { c } = processCircle(props);\n  const { r } = props;\n  ctx.canvas.drawCircle(c.x, c.y, r, ctx.paint);\n};\n\nexport const drawFill = (ctx: DrawingContext, _props: DrawingNodeProps) => {\n  \"worklet\";\n  ctx.canvas.drawPaint(ctx.paint);\n};\n"],"mappings":"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","ignoreList":[]}