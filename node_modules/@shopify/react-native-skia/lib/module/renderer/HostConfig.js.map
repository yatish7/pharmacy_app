{"version":3,"names":["DefaultEventPriority","bindReanimatedProps","extractReanimatedProps","unbindReanimatedNode","createNode","shallowEq","DEBUG","debug","args","console","log","appendNode","parent","child","addChild","removeNode","unmounted","removeChild","insertBefore","before","insertChildBefore","skHostConfig","supportsMutation","isPrimaryRenderer","supportsPersistence","supportsHydration","scheduleTimeout","setTimeout","cancelTimeout","clearTimeout","noTimeout","appendChildToContainer","container","root","appendChild","getRootHostContext","_rootContainerInstance","getChildHostContext","_parentHostContext","_type","shouldSetTextContent","_props","createTextInstance","_text","_hostContext","_internalInstanceHandle","Error","createInstance","type","pristineProps","props","reanimatedProps","node","appendInitialChild","parentInstance","finalizeInitialChildren","commitMount","prepareForCommit","_containerInfo","resetAfterCommit","redraw","getPublicInstance","prepareUpdate","_instance","oldProps","newProps","rootContainerInstance","propsAreEqual","commitUpdate","instance","updatePayload","prevProps","nextProps","_internalHandle","setProps","commitTextUpdate","_textInstance","_oldText","_newText","clearContainer","children","forEach","preparePortalMount","removeChildFromContainer","insertInContainerBefore","getCurrentEventPriority","beforeActiveInstanceBlur","afterActiveInstanceBlur","detachDeletedInstance","getInstanceFromNode","_node","prepareScopeUpdate","_scopeInstance","getInstanceFromScope"],"sources":["HostConfig.ts"],"sourcesContent":["/*global NodeJS*/\nimport type { Fiber, HostConfig } from \"react-reconciler\";\nimport { DefaultEventPriority } from \"react-reconciler/constants\";\n\nimport type { NodeType, Node } from \"../dom/types\";\nimport {\n  bindReanimatedProps,\n  extractReanimatedProps,\n  unbindReanimatedNode,\n} from \"../external/reanimated/renderHelpers\";\n\nimport type { Container } from \"./Container\";\nimport { createNode } from \"./HostComponents\";\nimport { shallowEq } from \"./typeddash\";\n\nconst DEBUG = false;\nexport const debug = (...args: Parameters<typeof console.log>) => {\n  if (DEBUG) {\n    console.log(...args);\n  }\n};\n\ntype Instance = Node<unknown>;\n\ntype Props = object;\ntype TextInstance = Node<unknown>;\ntype SuspenseInstance = Instance;\ntype HydratableInstance = Instance;\ntype PublicInstance = Instance;\ntype HostContext = null;\ntype UpdatePayload = Container;\ntype ChildSet = unknown;\ntype TimeoutHandle = NodeJS.Timeout;\ntype NoTimeout = -1;\n\ntype SkiaHostConfig = HostConfig<\n  NodeType,\n  Props,\n  Container,\n  Instance,\n  TextInstance,\n  SuspenseInstance,\n  HydratableInstance,\n  PublicInstance,\n  HostContext,\n  UpdatePayload,\n  ChildSet,\n  TimeoutHandle,\n  NoTimeout\n>;\n\nconst appendNode = (parent: Node<unknown>, child: Node<unknown>) => {\n  parent.addChild(child);\n};\n\nconst removeNode = (\n  parent: Node<unknown>,\n  child: Node<unknown>,\n  unmounted = false\n) => {\n  // If the drawing is unmounted we don't want to update it.\n  // We can just stop the reanimated mappers\n  unbindReanimatedNode(child);\n  if (!unmounted) {\n    parent.removeChild(child);\n  }\n};\n\nconst insertBefore = (\n  parent: Node<unknown>,\n  child: Node<unknown>,\n  before: Node<unknown>\n) => {\n  parent.insertChildBefore(child, before);\n};\n\nexport const skHostConfig: SkiaHostConfig = {\n  /**\n   * This function is used by the reconciler in order to calculate current time for prioritising work.\n   */\n  supportsMutation: true,\n  isPrimaryRenderer: false,\n  supportsPersistence: false,\n  supportsHydration: false,\n  //supportsMicrotask: true,\n\n  scheduleTimeout: setTimeout,\n  cancelTimeout: clearTimeout,\n  noTimeout: -1,\n\n  appendChildToContainer(container, child) {\n    debug(\"appendChildToContainer\");\n    appendNode(container.root, child);\n  },\n\n  appendChild(parent, child) {\n    debug(\"appendChild\", parent, child);\n    appendNode(parent, child);\n  },\n\n  getRootHostContext: (_rootContainerInstance: Container) => {\n    debug(\"getRootHostContext\");\n    return null;\n  },\n\n  getChildHostContext(_parentHostContext, _type, _rootContainerInstance) {\n    debug(\"getChildHostContext\");\n    return null;\n  },\n\n  shouldSetTextContent(_type, _props) {\n    return false;\n  },\n\n  createTextInstance(\n    _text,\n    _rootContainerInstance,\n    _hostContext,\n    _internalInstanceHandle\n  ) {\n    debug(\"createTextInstance\");\n    // return SpanNode({}, text) as SkNode;\n    throw new Error(\"Text nodes are not supported yet\");\n  },\n\n  createInstance(\n    type,\n    pristineProps,\n    container,\n    _hostContext,\n    _internalInstanceHandle\n  ) {\n    debug(\"createInstance\", type);\n    const [props, reanimatedProps] = extractReanimatedProps(pristineProps);\n    const node = createNode(container, type, props);\n    bindReanimatedProps(container, node, reanimatedProps);\n    return node;\n  },\n\n  appendInitialChild(parentInstance, child) {\n    debug(\"appendInitialChild\");\n    appendNode(parentInstance, child);\n  },\n\n  finalizeInitialChildren(\n    parentInstance,\n    _type,\n    _props,\n    _rootContainerInstance,\n    _hostContext\n  ) {\n    debug(\"finalizeInitialChildren\", parentInstance);\n    return false;\n  },\n\n  commitMount() {\n    // if finalizeInitialChildren = true\n    debug(\"commitMount\");\n  },\n\n  prepareForCommit(_containerInfo) {\n    debug(\"prepareForCommit\");\n    return null;\n  },\n\n  resetAfterCommit(container) {\n    debug(\"resetAfterCommit\");\n    container.redraw();\n  },\n\n  getPublicInstance(node: Instance) {\n    debug(\"getPublicInstance\");\n    return node;\n  },\n\n  prepareUpdate: (\n    _instance,\n    type,\n    oldProps,\n    newProps,\n    rootContainerInstance,\n    _hostContext\n  ) => {\n    debug(\"prepareUpdate\");\n    const propsAreEqual = shallowEq(oldProps, newProps);\n    if (propsAreEqual) {\n      return null;\n    }\n    debug(\"update \", type);\n    return rootContainerInstance;\n  },\n\n  commitUpdate(\n    instance,\n    updatePayload,\n    type,\n    prevProps,\n    nextProps,\n    _internalHandle\n  ) {\n    debug(\"commitUpdate: \", type);\n    if (shallowEq(prevProps, nextProps)) {\n      return;\n    }\n    const [props, reanimatedProps] = extractReanimatedProps(nextProps);\n    instance.setProps(props);\n    bindReanimatedProps(updatePayload, instance, reanimatedProps);\n  },\n\n  commitTextUpdate: (\n    _textInstance: TextInstance,\n    _oldText: string,\n    _newText: string\n  ) => {\n    //  textInstance.instance = newText;\n  },\n\n  clearContainer: (container) => {\n    debug(\"clearContainer\");\n    container.root.children().forEach((child) => {\n      container.root.removeChild(child);\n    });\n  },\n\n  preparePortalMount: () => {\n    debug(\"preparePortalMount\");\n  },\n\n  removeChild: (parent, child) => {\n    removeNode(parent, child);\n  },\n\n  removeChildFromContainer: (container, child) => {\n    removeNode(container.root, child, container.unmounted);\n  },\n\n  insertInContainerBefore: (container, child, before) => {\n    insertBefore(container.root, child, before);\n  },\n\n  insertBefore: (parent, child, before) => {\n    insertBefore(parent, child, before);\n  },\n\n  // see https://github.com/pmndrs/react-three-fiber/pull/2360#discussion_r916356874\n  getCurrentEventPriority: () => DefaultEventPriority,\n  beforeActiveInstanceBlur: () => {},\n  afterActiveInstanceBlur: () => {},\n  detachDeletedInstance: () => {},\n\n  getInstanceFromNode: function (_node): Fiber | null | undefined {\n    return null;\n  },\n  prepareScopeUpdate: function (_scopeInstance, _instance): void {},\n  getInstanceFromScope: function (_scopeInstance): Instance | null {\n    return null;\n  },\n};\n"],"mappings":"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","ignoreList":[]}