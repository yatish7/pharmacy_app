import React from "react";
import { OriginType } from "../victory-label/victory-label";
import { D3Scale } from "../types/prop-types";
import { VictoryThemeDefinition } from "../victory-theme/types";
export interface VictoryContainerProps {
    "aria-describedby"?: string;
    "aria-labelledby"?: string;
    children?: React.ReactElement | React.ReactElement[];
    className?: string;
    containerId?: number | string;
    containerRef?: React.Ref<HTMLElement>;
    desc?: string;
    events?: React.DOMAttributes<any>;
    height?: number;
    name?: string;
    origin?: OriginType;
    polar?: boolean;
    portalComponent?: React.ReactElement;
    portalZIndex?: number;
    preserveAspectRatio?: string;
    responsive?: boolean;
    role?: string;
    scale?: {
        x?: D3Scale;
        y?: D3Scale;
    };
    style?: React.CSSProperties;
    tabIndex?: number;
    theme?: VictoryThemeDefinition;
    title?: string;
    width?: number;
    ouiaId?: number | string;
    ouiaSafe?: boolean;
    ouiaType?: string;
}
export declare function useVictoryContainer<TProps extends VictoryContainerProps>(initialProps: TProps): {
    className: string;
    portalComponent: JSX.Element;
    portalZIndex: number;
    responsive: boolean;
    role: string;
} & TProps & {
    titleId: string;
    descId: string;
    dimensions: {
        width: string;
        height: string;
    } | {
        width: number | undefined;
        height: number | undefined;
    };
    viewBox: string | undefined;
    preserveAspectRatio: string | undefined;
    ariaLabelledBy: string | undefined;
    ariaDescribedBy: string | undefined;
    userProps: Record<string, string>;
    localContainerRef: React.RefObject<HTMLDivElement>;
};
export declare const VictoryContainer: {
    (initialProps: VictoryContainerProps): JSX.Element;
    role: string;
};
//# sourceMappingURL=victory-container.d.ts.map